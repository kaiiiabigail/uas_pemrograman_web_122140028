{
	"info": {
		"_postman_id": "kopiku-admin-api",
		"name": "Kopiku Admin API",
		"description": "API collection for Kopiku Admin Dashboard. This collection provides endpoints for managing the Kopiku coffee shop system, including authentication, orders, menu items, categories, and sales reports.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"description": "Endpoints for admin authentication and authorization",
			"item": [
				{
					"name": "Admin Login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "Specifies the content type of the request body"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin1@kopiku.com\",\n    \"password\": \"admin123\"\n}",
							"description": "Admin credentials for authentication"
						},
						"url": {
							"raw": "{{base_url}}/api/admin/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"login"
							]
						},
						"description": "Authenticate admin user and get JWT token for subsequent requests. The token will be automatically saved to the environment variable 'token'."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"admin1@kopiku.com\",\n    \"password\": \"admin123\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/admin/login",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"admin",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"user\": {\n        \"id\": 1,\n        \"email\": \"admin1@kopiku.com\",\n        \"username\": \"admin1\",\n        \"role\": \"admin\",\n        \"is_admin\": true\n    },\n    \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\"\n}",
							"description": "Successful login response containing user details and JWT token"
						},
						{
							"name": "Error Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"wrong@email.com\",\n    \"password\": \"wrongpass\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/admin/login",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"admin",
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Invalid credentials\"\n}",
							"description": "Error response for invalid credentials"
						}
					]
				}
			]
		},
		{
			"name": "Dashboard",
			"description": "Endpoints for accessing dashboard statistics and overview",
			"item": [
				{
					"name": "Get Dashboard Stats",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": "JWT token obtained from login"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/admin/dashboard",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"dashboard"
							]
						},
						"description": "Get dashboard statistics including total orders and revenue for today, plus recent orders"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/admin/dashboard",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"admin",
										"dashboard"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"orders_today\": 15,\n    \"revenue_today\": 450000,\n    \"recent_orders\": [\n        {\n            \"id\": 1,\n            \"customer_name\": \"John Doe\",\n            \"total_amount\": 35000,\n            \"status\": \"completed\",\n            \"created_at\": \"2024-01-20T10:30:00Z\"\n        }\n    ]\n}",
							"description": "Dashboard statistics including today's orders, revenue, and recent orders"
						}
					]
				}
			]
		},
		{
			"name": "Orders",
			"description": "Endpoints for managing customer orders",
			"item": [
				{
					"name": "Get All Orders",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": "JWT token obtained from login"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/admin/orders?status=pending&start_date=2024-01-01&end_date=2024-12-31",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"orders"
							],
							"query": [
								{
									"key": "status",
									"value": "pending",
									"description": "Filter by order status (pending, processing, completed, cancelled)"
								},
								{
									"key": "start_date",
									"value": "2024-01-01",
									"description": "Start date for filtering orders (YYYY-MM-DD)"
								},
								{
									"key": "end_date",
									"value": "2024-12-31",
									"description": "End date for filtering orders (YYYY-MM-DD)"
								}
							]
						},
						"description": "Get all orders with optional filters for status and date range"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/admin/orders?status=pending",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"admin",
										"orders"
									],
									"query": [
										{
											"key": "status",
											"value": "pending"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 1,\n        \"customer_name\": \"John Doe\",\n        \"total_amount\": 35000,\n        \"status\": \"pending\",\n        \"created_at\": \"2024-01-20T10:30:00Z\"\n    }\n]",
							"description": "List of orders matching the filter criteria"
						}
					]
				},
				{
					"name": "Update Order Status",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": "JWT token obtained from login"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "Specifies the content type of the request body"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"completed\"\n}",
							"description": "New status for the order (pending, processing, completed, cancelled)"
						},
						"url": {
							"raw": "{{base_url}}/api/admin/orders/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"orders",
								"1"
							]
						},
						"description": "Update the status of a specific order. Only valid status values are allowed: pending, processing, completed, cancelled."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": \"completed\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/admin/orders/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"admin",
										"orders",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"customer_name\": \"John Doe\",\n    \"total_amount\": 35000,\n    \"status\": \"completed\",\n    \"created_at\": \"2024-01-20T10:30:00Z\",\n    \"updated_at\": \"2024-01-20T11:00:00Z\"\n}",
							"description": "Updated order details"
						},
						{
							"name": "Error Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": \"invalid_status\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/admin/orders/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"admin",
										"orders",
										"1"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Invalid status\"\n}",
							"description": "Error response for invalid status value"
						}
					]
				},
				{
					"name": "Delete Order",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": "JWT token obtained from login"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/admin/orders/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"orders",
								"1"
							]
						},
						"description": "Delete an order. Only cancelled orders can be deleted. This operation is irreversible."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/admin/orders/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"admin",
										"orders",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Order deleted successfully\"\n}",
							"description": "Confirmation of successful deletion"
						},
						{
							"name": "Error Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/admin/orders/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"admin",
										"orders",
										"1"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Only cancelled orders can be deleted\"\n}",
							"description": "Error response when trying to delete a non-cancelled order"
						}
					]
				}
			]
		},
		{
			"name": "Menu",
			"description": "Endpoints for managing menu items",
			"item": [
				{
					"name": "Get All Menu Items",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": "JWT token obtained from login"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/admin/menu?category_id=1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"menu"
							],
							"query": [
								{
									"key": "category_id",
									"value": "1",
									"description": "Filter menu items by category ID"
								}
							]
						},
						"description": "Get all menu items with optional category filter"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/admin/menu",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"admin",
										"menu"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 1,\n        \"name\": \"Espresso\",\n        \"description\": \"Strong coffee shot\",\n        \"price\": 15000,\n        \"category_id\": 1,\n        \"is_available\": true\n    }\n]",
							"description": "List of menu items"
						}
					]
				},
				{
					"name": "Create Menu Item",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": "JWT token obtained from login"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "Specifies the content type of the request body"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Espresso\",\n    \"description\": \"Strong coffee shot\",\n    \"price\": 15000,\n    \"category_id\": 1,\n    \"is_available\": true\n}",
							"description": "New menu item details. Required fields: name, price, category_id"
						},
						"url": {
							"raw": "{{base_url}}/api/admin/menu",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"menu"
							]
						},
						"description": "Create a new menu item. The category_id must reference an existing category."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Espresso\",\n    \"description\": \"Strong coffee shot\",\n    \"price\": 15000,\n    \"category_id\": 1,\n    \"is_available\": true\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/admin/menu",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"admin",
										"menu"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"name\": \"Espresso\",\n    \"description\": \"Strong coffee shot\",\n    \"price\": 15000,\n    \"category_id\": 1,\n    \"is_available\": true\n}",
							"description": "Created menu item details"
						},
						{
							"name": "Error Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Espresso\",\n    \"price\": 15000\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/admin/menu",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"admin",
										"menu"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"category_id is required\"\n}",
							"description": "Error response when required fields are missing"
						}
					]
				},
				{
					"name": "Update Menu Item",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": "JWT token obtained from login"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "Specifies the content type of the request body"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Espresso Double Shot\",\n    \"price\": 20000,\n    \"is_available\": true\n}",
							"description": "Updated menu item details. Only include fields that need to be updated."
						},
						"url": {
							"raw": "{{base_url}}/api/admin/menu/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"menu",
								"1"
							]
						},
						"description": "Update an existing menu item. If category_id is provided, it must reference an existing category."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Espresso Double Shot\",\n    \"price\": 20000,\n    \"is_available\": true\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/admin/menu/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"admin",
										"menu",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"name\": \"Espresso Double Shot\",\n    \"description\": \"Strong coffee shot\",\n    \"price\": 20000,\n    \"category_id\": 1,\n    \"is_available\": true,\n    \"updated_at\": \"2024-01-20T11:00:00Z\"\n}",
							"description": "Updated menu item details"
						}
					]
				},
				{
					"name": "Delete Menu Item",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": "JWT token obtained from login"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/admin/menu/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"menu",
								"1"
							]
						},
						"description": "Delete a menu item. This operation is irreversible."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/admin/menu/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"admin",
										"menu",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Menu item deleted successfully\"\n}",
							"description": "Confirmation of successful deletion"
						}
					]
				}
			]
		},
		{
			"name": "Categories",
			"description": "Endpoints for managing menu categories",
			"item": [
				{
					"name": "Get All Categories",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": "JWT token obtained from login"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/admin/categories",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"categories"
							]
						},
						"description": "Get all menu categories"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/admin/categories",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"admin",
										"categories"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 1,\n        \"name\": \"Hot Coffee\",\n        \"description\": \"Traditional hot coffee drinks\"\n    }\n]",
							"description": "List of menu categories"
						}
					]
				},
				{
					"name": "Create Category",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": "JWT token obtained from login"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "Specifies the content type of the request body"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Hot Coffee\",\n    \"description\": \"Traditional hot coffee drinks\"\n}",
							"description": "New category details. Name is required."
						},
						"url": {
							"raw": "{{base_url}}/api/admin/categories",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"categories"
							]
						},
						"description": "Create a new menu category"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Hot Coffee\",\n    \"description\": \"Traditional hot coffee drinks\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/admin/categories",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"admin",
										"categories"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"name\": \"Hot Coffee\",\n    \"description\": \"Traditional hot coffee drinks\"\n}",
							"description": "Created category details"
						}
					]
				},
				{
					"name": "Update Category",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": "JWT token obtained from login"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "Specifies the content type of the request body"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Hot Coffee Drinks\",\n    \"description\": \"Traditional and specialty hot coffee drinks\"\n}",
							"description": "Updated category details. Only include fields that need to be updated."
						},
						"url": {
							"raw": "{{base_url}}/api/admin/categories/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"categories",
								"1"
							]
						},
						"description": "Update an existing category"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Hot Coffee Drinks\",\n    \"description\": \"Traditional and specialty hot coffee drinks\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/admin/categories/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"admin",
										"categories",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"name\": \"Hot Coffee Drinks\",\n    \"description\": \"Traditional and specialty hot coffee drinks\",\n    \"updated_at\": \"2024-01-20T11:00:00Z\"\n}",
							"description": "Updated category details"
						}
					]
				},
				{
					"name": "Delete Category",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": "JWT token obtained from login"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/admin/categories/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"categories",
								"1"
							]
						},
						"description": "Delete a category. This operation is only allowed if no menu items are associated with the category."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/admin/categories/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"admin",
										"categories",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Category deleted successfully\"\n}",
							"description": "Confirmation of successful deletion"
						},
						{
							"name": "Error Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/admin/categories/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"admin",
										"categories",
										"1"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Cannot delete category with associated menu items\"\n}",
							"description": "Error response when trying to delete a category with associated menu items"
						}
					]
				}
			]
		},
		{
			"name": "Reports",
			"description": "Endpoints for accessing sales reports and analytics",
			"item": [
				{
					"name": "Get Sales Report",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": "JWT token obtained from login"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/admin/reports?start_date=2024-01-01&end_date=2024-12-31",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"reports"
							],
							"query": [
								{
									"key": "start_date",
									"value": "2024-01-01",
									"description": "Start date for the report (YYYY-MM-DD)"
								},
								{
									"key": "end_date",
									"value": "2024-12-31",
									"description": "End date for the report (YYYY-MM-DD)"
								}
							]
						},
						"description": "Get sales report with daily statistics and top selling items"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/admin/reports?start_date=2024-01-01&end_date=2024-12-31",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"admin",
										"reports"
									],
									"query": [
										{
											"key": "start_date",
											"value": "2024-01-01"
										},
										{
											"key": "end_date",
											"value": "2024-12-31"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"daily_sales\": [\n        {\n            \"date\": \"2024-01-01\",\n            \"orders\": 10,\n            \"revenue\": 350000\n        }\n    ],\n    \"top_items\": [\n        {\n            \"name\": \"Espresso\",\n            \"total_quantity\": 50\n        }\n    ]\n}",
							"description": "Sales report with daily statistics and top selling items"
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Save token after successful login",
					"if (pm.info.requestName === \"Admin Login\") {",
					"    var jsonData = pm.response.json();",
					"    if (jsonData.token) {",
					"        pm.environment.set(\"token\", jsonData.token);",
					"    }",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://127.0.0.1:6543",
			"type": "string",
			"description": "Base URL for the API server"
		},
		{
			"key": "token",
			"value": "",
			"type": "string",
			"description": "JWT token for authentication"
		}
	]
}