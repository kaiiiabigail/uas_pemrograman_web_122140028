"""Make user_id nullable in orders

Revision ID: a5e92c3c2cd8
Revises: 775856617816
Create Date: 2025-05-31 09:41:26.221531

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a5e92c3c2cd8'
down_revision = '775856617816'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('categories', 'description',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('categories', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.create_unique_constraint(op.f('uq_categories_name'), 'categories', ['name'])
    op.alter_column('menu_items', 'description',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('menu_items', 'price',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               type_=sa.Float(),
               existing_nullable=False)
    op.alter_column('menu_items', 'is_available',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('menu_items', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('orders', 'total_amount',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               type_=sa.Float(),
               existing_nullable=False)
    # CREATE ENUM TYPE BEFORE USING IT
    orderstatus = sa.Enum('PENDING', 'CONFIRMED', 'COMPLETED', 'CANCELLED', name='orderstatus')
    orderstatus.create(op.get_bind(), checkfirst=True)
    op.alter_column('orders', 'status',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.Enum('PENDING', 'CONFIRMED', 'COMPLETED', 'CANCELLED', name='orderstatus'),
               nullable=True,
               postgresql_using="status::orderstatus")
    op.alter_column('orders', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    userrole = sa.Enum('ADMIN', 'USER', name='userrole')
    userrole.create(op.get_bind(), checkfirst=True)
    op.alter_column('users', 'role',
        existing_type=sa.VARCHAR(length=50),
        type_=sa.Enum('ADMIN', 'USER', name='userrole'),
        existing_nullable=False,
        postgresql_using="role::userrole")
    op.alter_column('users', 'username',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=False)
    op.alter_column('users', 'is_admin',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('orders', 'user_id', existing_type=sa.INTEGER(), nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('users', 'is_admin',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('users', 'role',
               existing_type=sa.Enum('ADMIN', 'USER', name='userrole'),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    op.alter_column('users', 'email',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
    op.alter_column('users', 'username',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
    op.alter_column('orders', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('orders', 'status',
               existing_type=sa.Enum('PENDING', 'CONFIRMED', 'COMPLETED', 'CANCELLED', name='orderstatus'),
               type_=sa.VARCHAR(length=50),
               nullable=False)
    op.alter_column('orders', 'total_amount',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=10, scale=2),
               existing_nullable=False)
    op.alter_column('menu_items', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('menu_items', 'is_available',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('menu_items', 'price',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=10, scale=2),
               existing_nullable=False)
    op.alter_column('menu_items', 'description',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.drop_constraint(op.f('uq_categories_name'), 'categories', type_='unique')
    op.alter_column('categories', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('categories', 'description',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('orders', 'user_id', existing_type=sa.INTEGER(), nullable=True)
    # ### end Alembic commands ### 